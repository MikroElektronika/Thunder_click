'
'Example for Thunder Click
'
'    Date          : May 2018.
'    Author        : Nemanja Medakovic
'
'Test configuration KINETIS :
'    
'    MCU              : MK64
'    Dev. Board       : HEXIWEAR
'    ARM Compiler ver : v6.0.0.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Initializes peripherals and pins.
'- Application Initialization - Initializes I2C driver and performs the reset command and RCO calibrate command.
'  Also configures the device for working properly.
'- Application Task - (code snippet) - Always checks is interrupt event happend (Listening mode) and after that gets
'  the informations about storm. Results logs on UART.
'
'
program Click_Thunder_KINETIS

include Click_Thunder_types
include Click_Thunder_config

dim
    stormMode as uint8_t 
    stormEnergy as uint32_t 
    stormDistance as uint8_t 
    text as char[100] 
    
sub procedure systemInit() 

    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_INT_PIN, _GPIO_INPUT) 
    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_CS_PIN, _GPIO_OUTPUT) 
    mikrobus_i2cInit(_MIKROBUS1, @_THUNDER_I2C_CFG[0]) 
    mikrobus_logInit(_MIKROBUS2, 19200) 
    mikrobus_logWrite("Initializing...", _LOG_LINE) 
    Delay_ms(100) 

end sub

sub procedure applicationInit() 

    thunder_i2cDriverInit(T_THUNDER_P(@_MIKROBUS1_GPIO), T_THUNDER_P(@_MIKROBUS1_I2C), _THUNDER_DEV_ADDR_3) 
    Delay_ms(200) 
    thunder_sendCommand(_THUNDER_RESET_COMM) 
    thunder_sendCommand(_THUNDER_CALIB_RCO_COMM) 
    thunder_writeReg(_THUNDER_CONFIG_0_REG, (_THUNDER_OUTDOOR or _THUNDER_NORMAL_MODE)) 
    thunder_writeReg(_THUNDER_CONFIG_1_REG, 0x21) 
    thunder_writeReg(_THUNDER_CONFIG_2_REG, ((_THUNDER_CLEAR_STAT or _THUNDER_1_LIGHTNING) or 0x02)) 
    thunder_writeReg(_THUNDER_CONFIG_3_INTERR_REG, (_THUNDER_DIV_RATIO_32 or _THUNDER_UNMASK_DISTURBER)) 
    thunder_writeReg(_THUNDER_INTERR_PIN_CONFIG_REG, _THUNDER_NO_DISPLAY_ON_IRQ_PIN) 
    mikrobus_logWrite("Thunder is initialized", _LOG_LINE) 
    mikrobus_logWrite("", _LOG_LINE) 
    Delay_ms(300) 

end sub

sub procedure applicationTask() 

    stormMode = thunder_checkInterr() 
    if ((stormMode = _THUNDER_NOISE_LEVEL_INTERR)) then 
        mikrobus_logWrite("Noise level too high", _LOG_LINE) 
        mikrobus_logWrite("", _LOG_LINE) 
    else 
        if ((stormMode = _THUNDER_DISTURBER_INTERR)) then 
            mikrobus_logWrite("Disturber detected", _LOG_LINE) 
            mikrobus_logWrite("", _LOG_LINE) 
        else 
            if ((stormMode = _THUNDER_LIGHTNING_INTERR)) then 
                thunder_getStormInfo(@stormEnergy, @stormDistance) 
                mikrobus_logWrite("Energy of the single lightning : ", _LOG_TEXT) 
                LongWordToStr(stormEnergy, text) 
                mikrobus_logWrite(text, _LOG_LINE) 
                mikrobus_logWrite("Distance estimation : ", _LOG_TEXT) 
                WordToStr(stormDistance, text) 
                mikrobus_logWrite(text, _LOG_TEXT) 
                mikrobus_logWrite(" km", _LOG_LINE) 
                mikrobus_logWrite("", _LOG_LINE) 
            end if
        end if
    end if

end sub

main :

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend

end.